function [SubFrame,X,Y,Z,X1,Y1,Z1,X2,Y2,Z2,X3,Y3,Z3,X4,Y4,Z4,X5,Y5,Z5,X6,Y6,Z6,X7,Y7,Z7,X8,Y8,Z8,X9,Y9,Z9,X10,Y10,Z10,X11,Y11,Z11,X12,Y12,Z12,X13,Y13,Z13,X14,Y14,Z14,X15,Y15,Z15] = importfile(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as column vectors.
%   [SUBFRAME,X,Y,Z,X1,Y1,Z1,X2,Y2,Z2,X3,Y3,Z3,X4,Y4,Z4,X5,Y5,Z5,X6,Y6,Z6,X7,Y7,Z7,X8,Y8,Z8,X9,Y9,Z9,X10,Y10,Z10,X11,Y11,Z11,X12,Y12,Z12,X13,Y13,Z13,X14,Y14,Z14,X15,Y15,Z15]
%   = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [SUBFRAME,X,Y,Z,X1,Y1,Z1,X2,Y2,Z2,X3,Y3,Z3,X4,Y4,Z4,X5,Y5,Z5,X6,Y6,Z6,X7,Y7,Z7,X8,Y8,Z8,X9,Y9,Z9,X10,Y10,Z10,X11,Y11,Z11,X12,Y12,Z12,X13,Y13,Z13,X14,Y14,Z14,X15,Y15,Z15]
%   = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [SubFrame,X,Y,Z,X1,Y1,Z1,X2,Y2,Z2,X3,Y3,Z3,X4,Y4,Z4,X5,Y5,Z5,X6,Y6,Z6,X7,Y7,Z7,X8,Y8,Z8,X9,Y9,Z9,X10,Y10,Z10,X11,Y11,Z11,X12,Y12,Z12,X13,Y13,Z13,X14,Y14,Z14,X15,Y15,Z15] = importfile1('Sticky_note_testing01.csv',2122, 2662);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/11/25 17:29:47

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2122;
    endRow = 2662;
end

%% Format for each line of text:
%   column2: double (%f)
%	column3: double (%f)
%   column4: double (%f)
%	column5: double (%f)
%   column6: double (%f)
%	column7: double (%f)
%   column8: double (%f)
%	column9: double (%f)
%   column10: double (%f)
%	column11: double (%f)
%   column12: double (%f)
%	column13: double (%f)
%   column14: double (%f)
%	column15: double (%f)
%   column16: double (%f)
%	column17: double (%f)
%   column18: double (%f)
%	column19: double (%f)
%   column20: double (%f)
%	column21: double (%f)
%   column22: double (%f)
%	column23: double (%f)
%   column24: double (%f)
%	column25: double (%f)
%   column26: double (%f)
%	column27: double (%f)
%   column28: double (%f)
%	column29: double (%f)
%   column30: double (%f)
%	column31: double (%f)
%   column32: double (%f)
%	column33: double (%f)
%   column34: double (%f)
%	column35: double (%f)
%   column36: double (%f)
%	column37: double (%f)
%   column38: double (%f)
%	column39: double (%f)
%   column40: double (%f)
%	column41: double (%f)
%   column42: double (%f)
%	column43: double (%f)
%   column44: double (%f)
%	column45: double (%f)
%   column46: double (%f)
%	column47: double (%f)
%   column48: double (%f)
%	column49: double (%f)
%   column50: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
SubFrame = dataArray{:, 1};
X = dataArray{:, 2};
Y = dataArray{:, 3};
Z = dataArray{:, 4};
X1 = dataArray{:, 5};
Y1 = dataArray{:, 6};
Z1 = dataArray{:, 7};
X2 = dataArray{:, 8};
Y2 = dataArray{:, 9};
Z2 = dataArray{:, 10};
X3 = dataArray{:, 11};
Y3 = dataArray{:, 12};
Z3 = dataArray{:, 13};
X4 = dataArray{:, 14};
Y4 = dataArray{:, 15};
Z4 = dataArray{:, 16};
X5 = dataArray{:, 17};
Y5 = dataArray{:, 18};
Z5 = dataArray{:, 19};
X6 = dataArray{:, 20};
Y6 = dataArray{:, 21};
Z6 = dataArray{:, 22};
X7 = dataArray{:, 23};
Y7 = dataArray{:, 24};
Z7 = dataArray{:, 25};
X8 = dataArray{:, 26};
Y8 = dataArray{:, 27};
Z8 = dataArray{:, 28};
X9 = dataArray{:, 29};
Y9 = dataArray{:, 30};
Z9 = dataArray{:, 31};
X10 = dataArray{:, 32};
Y10 = dataArray{:, 33};
Z10 = dataArray{:, 34};
X11 = dataArray{:, 35};
Y11 = dataArray{:, 36};
Z11 = dataArray{:, 37};
X12 = dataArray{:, 38};
Y12 = dataArray{:, 39};
Z12 = dataArray{:, 40};
X13 = dataArray{:, 41};
Y13 = dataArray{:, 42};
Z13 = dataArray{:, 43};
X14 = dataArray{:, 44};
Y14 = dataArray{:, 45};
Z14 = dataArray{:, 46};
X15 = dataArray{:, 47};
Y15 = dataArray{:, 48};
Z15 = dataArray{:, 49};


